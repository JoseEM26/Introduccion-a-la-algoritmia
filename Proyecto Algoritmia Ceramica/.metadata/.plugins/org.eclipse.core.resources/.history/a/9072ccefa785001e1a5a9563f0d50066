package Ceramica;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.border.EmptyBorder;

public class GenReporte extends JDialog {

    private final JPanel contentPanel = new JPanel();

    public static void main(String[] args) {
        try {
            GenReporte dialog = new GenReporte();
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            dialog.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public GenReporte() {
        setTitle("Generar reportes\r");
        setBounds(100, 100, 763, 507);
        getContentPane().setLayout(new BorderLayout());
        contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
        getContentPane().add(contentPanel, BorderLayout.CENTER);
        contentPanel.setLayout(null);

        JLabel lblNewLabel = new JLabel("Tipo de Reporte");
        lblNewLabel.setBounds(10, 27, 115, 16);
        contentPanel.add(lblNewLabel);

        JComboBox<String> comboBox = new JComboBox<>();
        comboBox.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                // Lógica para mostrar información según el tipo de reporte seleccionado
                String tipoReporte = comboBox.getSelectedItem().toString();
                generarReporte(tipoReporte);
            }
        });
        comboBox.setModel(new DefaultComboBoxModel<>(new String[]{"Ventas por modelo", "Comparación de precios con el precio promedio", "Comparación de cajas vendidas con la cantidad óptima", "Estadística sobre el precio"}));
        comboBox.setBounds(135, 25, 458, 23);
        contentPanel.add(comboBox);

        JButton btnNewButton = new JButton("Cerrar");
        btnNewButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
        btnNewButton.setBounds(621, 25, 89, 23);
        contentPanel.add(btnNewButton);

        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setBounds(10, 82, 727, 375);
        contentPanel.add(scrollPane);

        JTextArea textArea = new JTextArea();
        scrollPane.setViewportView(textArea);
    }

    // Método para generar el reporte según el tipo seleccionado
    private void generarReporte(String tipoReporte) {
        JTextArea textArea = getTextComponent(); // Obtén el JTextArea

        // Lógica para generar el reporte según el tipo seleccionado
        switch (tipoReporte) {
            case "Ventas por modelo":
                // Aquí podrías llamar a un método específico para mostrar ventas por modelo
                textArea.setText("VENTAS POR MODELO\r\n\n"
                		+ "Modelo:" + Menu.modelo0 + "\n" 
                		+ "Cantidad de ventas :" + );
                break;
            case "Comparación de precios con el precio promedio":
                // Aquí podrías llamar a un método específico para mostrar comparación de precios
                textArea.setText("Mostrar comparación de precios...");
                break;
            // Agrega casos adicionales según sea necesario
            default:
                textArea.setText("Selecciona un tipo de reporte válido.");
                break;
        }
    }

    // Método para obtener el JTextArea
    private JTextArea getTextComponent() {
        Component[] components = contentPanel.getComponents();
        for (Component component : components) {
            if (component instanceof JScrollPane) {
                JScrollPane scrollPane = (JScrollPane) component;
                return (JTextArea) scrollPane.getViewport().getView();
            }
        }
        return null;
    }
}
